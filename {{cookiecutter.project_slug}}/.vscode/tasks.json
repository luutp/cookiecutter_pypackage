{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "bash file",
            "command": "bash",
            "windows": {
                "args": [
                    "${config:WIN_VSCODE_DIR}/${fileBasename}"
                ],
            },
            "linux": {
                "args": [
                    "${file}"
                ],
            },
            "_runner": "terminal",
            "problemMatcher": []
        },
        {
            "label": "chmod",
            "type": "shell",
            "command": "sudo chmod +x ${file}",
            "_runner": "terminal",
            "problemMatcher": []
        },
        // BASH SETUP
        {
            "label": "pip_install",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/pip_install.sh",
            ],
            "problemMatcher": []
        },
        // PYTHON
        {
            "label": "python_autoflake",
            "windows": {
                "command": "${config:python.pythonPath}",
            },
            "linux": {
                "command": "${config:python.pythonPath}",
            },
            "args": [
                "-m",
                "autoflake",
                "--in-place",
                "--remove-all-unused-imports",
                "${file}"
            ],
            "problemMatcher": []
        },
        {
            "label": "python_md_paste_image_link",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/run_python_file.sh",
                "-f",
                "md_paste_image_link.py",
            ],
            "problemMatcher": []
        },
        {
            "label": "python_md_paste_youtube_link",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/run_python_file.sh",
                "-f",
                "md_paste_youtube_link.py",
            ],
            "problemMatcher": []
        },
        // Git API
        {
            "label": "git_label_config",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/run_python_file.sh",
                "-f",
                "git_label_config.py --repo ${input:repo_name}",
            ],
            "problemMatcher": []
        },
        {
            "label": "git_upload_issue",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/run_python_file.sh",
                "-f",
                "git_create_issue.py -f ${file}",
            ],
            "problemMatcher": []
        },
        {
            "label": "git_make_issue_template",
            "command": "bash",
            "windows": {
                "args": [
                    "${config:WIN_VSCODE_DIR}/git_make_issue_template.sh"
                ],
            },
            "linux": {
                "args": [
                    "${file}"
                ],
            },
            "_runner": "terminal",
            "problemMatcher": []
        },
        {
            "label": "python_md_screen_capture",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/run_python_file.sh",
                "-f",
                "md_screen_capture.py",
            ],
            "problemMatcher": []
        },
        // Terminal
        {
            "label": "Terminal: Terminate All Tasks",
            "command": "echo ${input:terminate}",
            "type": "shell",
            "problemMatcher": []
        },
        // FLASK
        {
            "label": "flask_run",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/flask_run.sh",
            ],
            "problemMatcher": []
        },
        {
            "label": "flask_make_blueprint",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/flask_make_blueprint.sh",
                "${input:blueprint_name}",
            ],
            "problemMatcher": []
        },
        {
            "label": "flask_secrets",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/run_python_file.sh",
                "-f",
                "flask_secrets.py",
            ],
            "problemMatcher": []
        },
        {
            "label": "flask_refresh_app",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/run_python_file.sh",
                "-f",
                "flask_refresh_app.py",
            ],
            "problemMatcher": []
        },
        // ESP_IDF
        {
            "label": "esp_idf: install",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/esp_idf_install.sh",
            ],
            "problemMatcher": []
        },
        {
            "label": "esp_idf: build-flash-monitor",
            "type": "shell",
            "command": "bash",
            "args": [
                "${config:WIN_VSCODE_DIR}/esp_idf_build_flash_monitor.sh",
            ],
            "problemMatcher": []
        },

    ],
    "inputs": [
        {
            "id": "blueprint_name",
            "description": "Flask BluePrint Name",
            "default": "main",
            "type": "promptString"
        },
        {
            "id": "repo_name",
            "description": "Git Repo Name",
            "default": "",
            "type": "promptString"
        },
        {
            "id": "terminate",
            "type": "command",
            "command": "workbench.action.tasks.terminate",
            "args": "terminateAll"
        },
    ]
}